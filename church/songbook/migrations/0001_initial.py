# Generated by Django 4.2.3 on 2023-07-04 01:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Mlinks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filename', models.CharField(max_length=255)),
                ('mtype', models.IntegerField()),
                ('murl', models.CharField(max_length=140)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70)),
            ],
        ),
        migrations.CreateModel(
            name='Song',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('singer', models.CharField(max_length=140)),
                ('info', models.CharField(max_length=140)),
                ('key', models.IntegerField()),
                ('lyrics', models.TextField(blank=True, null=True)),
                ('language', models.IntegerField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('media', models.ManyToManyField(related_name='song', to='songbook.mlinks')),
                ('tags', models.ManyToManyField(blank=True, related_name='song', to='songbook.tag')),
                ('translated', models.ManyToManyField(blank=True, related_name='translation', to='songbook.song')),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='publisher', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=140)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('language', models.CharField(max_length=5)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Lists',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Sunday service', max_length=100)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('date_time', models.DateTimeField()),
                ('date_end', models.DateTimeField(blank=True, null=True)),
                ('mlink', models.CharField(max_length=140)),
                ('passage', models.TextField()),
                ('status', models.IntegerField(default=0)),
                ('assigned', models.ManyToManyField(related_name='created', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lists', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ListItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=140)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('desired_key', models.IntegerField()),
                ('listorder', models.IntegerField()),
                ('notes', models.TextField()),
                ('assigned', models.ManyToManyField(related_name='assigned', to=settings.AUTH_USER_MODEL)),
                ('lists', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='songbook.lists')),
                ('song', models.ManyToManyField(related_name='inlist', to='songbook.song')),
            ],
        ),
    ]
